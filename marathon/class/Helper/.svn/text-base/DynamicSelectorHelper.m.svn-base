//
//  DynamicSelectorHelper.m
//  Shake
//
//  Created by zhangluyi on 11-11-1.
//  Copyright 2011年 __MyCompanyName__. All rights reserved.
//

#import "DynamicSelectorHelper.h"


@implementation DynamicSelectorHelper

@synthesize clientConnection,currentCommonTypesMd5;
@synthesize stringForAppShareTitle,stringForAppShareContent,stringForAppShareJumpURL,stringForInviteTitle,stringForInviteContent,stringForInviteJumpURL;
@synthesize stringForLeftGiftPackage,stringForTitleGiftPackage;
@synthesize stringForShowDownload;

- (id)initWithUrl:(NSString *)categoryUrl {
    self = [super init];
    if (self) {
        
    }
    return self;
}

- (BOOL)menuNeedUpdate {
    
    BOOL isNeedUpdate = YES;
    
    NSDate *lastUpdateDate = [PersistenceHelper dataForKey:@"Dynamic_UpdateDate"];
    if (lastUpdateDate == nil) {
        //从未发送过，发送，发送成功后打时间戳
        isNeedUpdate = YES;
    }else {
        //曾经发送过，检查上次发送的时间间隔。如果间隔超过1天，发送(注意：确认发送成功后，再打发送时间戳！！！)
        NSDictionary *intervalSendDict = [Utility intervalForDate:lastUpdateDate toDate:[NSDate date]];
        if ([[intervalSendDict objForKey:@"day"] intValue] > 1) {
            isNeedUpdate = YES;
        }else {
            isNeedUpdate = NO;
        }
    }
    
//    NSString *storeMD5 = [PersistenceHelper dataForKey:SELECTOR_LAST_UPDATE_MD5];
//    if (self.currentCommonTypesMd5 && [self.currentCommonTypesMd5 length] > 0 &&
//        storeMD5 && [storeMD5 length] > 0) {
//        if ([self.currentCommonTypesMd5 isEqualToString:storeMD5]) {
//            return NO;
//        }
//    }
    
    return YES;    
}

- (void)updateMenu {
    if (clientConnection == nil) {
        clientConnection = [[ClientConnection alloc] init];
        clientConnection.delegate = self;
    }
    NSString *searchString = COMMON_TYPES_MAKE;
    [clientConnection get:searchString withID:kRequestCommonTypes];
}

- (void)createMenu {
    
    //首先读取是否保存了上一次更新的数据
    NSDictionary *jsonDict = [PersistenceHelper dataForKey:@"category"];
    if (!jsonDict) {
        //UserDefault中没有任何记录，表明是第一次获取
        NSString *filePath = [[NSBundle mainBundle] pathForResource:SELECTOR_INIT_FILE ofType:@"txt"];
        NSString *jsonString = [NSString stringWithContentsOfFile:filePath encoding:NSUTF8StringEncoding error:nil];
        NSString *commonTypeMd5 = [jsonString md5];
        [PersistenceHelper setData:commonTypeMd5 forKey:SELECTOR_LAST_UPDATE_MD5];
        jsonDict = [jsonString JSONValue];
    }
    
    [self parseMenuJson:jsonDict];
}

- (BOOL)parseMenuJson:(NSDictionary *)jsonDict {
    
    BOOL isJsonValid = YES;
    
    //是否显示游戏卡片的下载、评论按钮
    NSString *showDownload = [[jsonDict objForKeyPath:@"data.show_download"] stringValue];
    if (showDownload && [showDownload length] > 0) {
        self.stringForShowDownload = showDownload;
    } else {
        self.stringForShowDownload = @"NO";
    }
    
    //@"礼包" 标题对应的文字
    NSString *giftPackageTitle = [[jsonDict objForKeyPath:@"data.gift_package.title"] stringValue];
    if (giftPackageTitle && [giftPackageTitle length] > 0) {
        self.stringForTitleGiftPackage = giftPackageTitle;
    } else {
        self.stringForTitleGiftPackage = @"资讯";
    }
    
    //@"礼　包" 左侧Tab对应的文字
    NSString *giftPackageLeft = [[jsonDict objForKeyPath:@"data.gift_package.left_tab"] stringValue];
    if (giftPackageLeft && [giftPackageLeft length] > 0) {
        self.stringForLeftGiftPackage = giftPackageLeft;
    } else {
        self.stringForLeftGiftPackage = @"资　讯";
    }
    
    //应用分享Title
    NSString *appShareTitle = [[jsonDict objForKeyPath:@"data.application_share.title"] stringValue];
    if (appShareTitle && [appShareTitle length] > 0) {
        self.stringForAppShareTitle = appShareTitle;
    } else {
        //        isJsonValid = NO;
    }
    
    //应用分享Content
    NSString *appShareContent = [jsonDict objForKeyPath:@"data.application_share.content"];
    if (appShareContent && [appShareContent length] > 0) {
        self.stringForAppShareContent = appShareContent;
    } else {
        //        isJsonValid = NO;
    }

    //应用分享jump url
    NSString *appShareJumpurl = [jsonDict objForKeyPath:@"data.application_share.jump_url"];
    if (appShareJumpurl && [appShareJumpurl length] > 0) {
        self.stringForAppShareJumpURL = appShareJumpurl;
    } else {
        //        isJsonValid = NO;
    }
    
    //好友邀请Title
    NSString *inviteTitle = [jsonDict objForKeyPath:@"data.invite.title"];
    if (inviteTitle && [inviteTitle length] > 0) {
        self.stringForInviteTitle = inviteTitle;
    } else {
        //        isJsonValid = NO;
    }
    
    //好友邀请Content
    NSString *inviteContent = [jsonDict objForKeyPath:@"data.invite.content"];
    if (inviteContent && [inviteContent length] > 0) {
        self.stringForInviteContent = inviteContent;
    } else {
        //        isJsonValid = NO;
    }
    
    //好友邀请jump url
    NSString *inviteJumpurl = [jsonDict objForKeyPath:@"data.invite.jump_url"];
    if (inviteJumpurl && [inviteJumpurl length] > 0) {
        self.stringForInviteJumpURL = inviteJumpurl;
    } else {
        //        isJsonValid = NO;
    }
    
    return isJsonValid;
}

- (void)stringDataDidFinishLoading:(ASIHTTPRequest *)_request {
    
    [clientConnection cancel];
    NSDictionary *userInfo = _request.userInfo;
    NSInteger requestID = [[userInfo objForKey:@"requestID"] intValue];
    
    //kRequestFilterCategory
    if (requestID == kRequestCommonTypes) {
        [PersistenceHelper setData:[NSDate date] forKey:@"Dynamic_UpdateDate"];
        
        NSDictionary *jsonDict = [[_request responseString] JSONValue];
        if (jsonDict == nil || [[jsonDict objForKey:@"result"] intValue] == 0) {
            return;
        } else {
            if ([self parseMenuJson:jsonDict]) {
                //解析成功，更新有效，序列化到本地
                [PersistenceHelper setData:jsonDict forKey:@"category"];
                [PersistenceHelper setData:currentCommonTypesMd5 forKey:SELECTOR_LAST_UPDATE_MD5];
            }
        }
    }
}


- (void)stringDataDidFailLoading:(ASIHTTPRequest *)_request {
    [clientConnection cancel];
}

@end
